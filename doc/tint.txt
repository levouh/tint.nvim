tint.txt                                                      *tint* *tint.nvim*

* NOTE: This file is autogenerated from DOC.md file

================================================================================
CONTENTS                                                           *tint-contents*

1. Content..........................................................|tint-content|
    1.1. Setup........................................................|tint-setup|
    1.2. Options....................................................|tint-options|
        1.2.1. tint....................................................|tint-tint|
        1.2.2. saturation........................................|tint-saturation|
        1.2.3. transforms........................................|tint-transforms|
        1.2.4. highlight_ignore_patterns..........|tint-highlight_ignore_patterns|
        1.2.5. window_ignore_function................|tint-window_ignore_function|
        1.2.6. tint_background_colors................|tint-tint_background_colors|

================================================================================
CONTENT                                                             *tint-content*

1.  Setup (#setup)
2.  Options (#options)

--------------------------------------------------------------------------------
SETUP                                                                 *tint-setup*

`require` the `tint` module, and pass the options you want to alter to the `setup` function.
>
    -- Default configuration
    require("tint").setup()
    -- Override some defaults
    require("tint").setup({
      tint = -45,  -- Darken colors, use a positive value to brighten
      saturation = 0.6,  -- Saturation to preserve
      transforms = require("tint").transforms.SATURATE_TINT,  -- Showing default behavior, but value here can be predefined set of transforms
      tint_background_colors = true,  -- Tint background portions of highlight groups
      highlight_ignore_patterns = { "WinSeparator", "Status.*" },  -- Highlight group patterns to ignore, see `string.find`
      window_ignore_function = function(winid)
        local bufid = vim.api.nvim_win_get_buf(winid)
        local buftype = vim.api.nvim_buf_get_option(bufid, "buftype")
        local floating = vim.api.nvim_win_get_config(winid).relative ~= ""
        -- Do not tint `terminal` or floating windows, tint everything else
        return buftype == "terminal" or floating
      end
    })
<

Custom transformations can also be setup. Make sure to create a PR if you end up making one that you think others may enjoy as well.
See `CONTRIBUTING.md` for more details on how to add transforms.
>
    -- Handle transformations of highlight groups for the tinted namespace yourself
    require("tint").setup({
      transforms = {
        require("tint.colors").saturate(0.5),
        function(r, g, b, hl_group_info)
          print("Higlight group name: " .. hl_group_info.hl_group_name)
          local hl_def = vim.api.nvim_get_hl_by_name(hl_group_info.hl_group_name)
          print("Highlight group definition: " .. vim.inspect(hl_def))
          return r + 1, g + 1, b + 1
        end
      }
    })
<

--------------------------------------------------------------------------------
OPTIONS                                                             *tint-options*

All configuration values are optional. If no value is provided, the default will be used.

TINT                                                                   *tint-tint*

type: `number`
default: `-40`

Amount to change current colorscheme. Negative values darken, positive values brighten.

SATURATION                                                       *tint-saturation*

type: `float`
default: `0.7`

The amount of saturation to preserve, in the range of `[0.0, 1.0]`.

TRANSFORMS                                                       *tint-transforms*

type: `table|string`
default: `tint.transforms.SATURATE_TINT`

A predefined set of transforms as a `string`, can be one of:

*   `require("tint").transforms.SATURATE_TINT`: Saturate and tint using `saturation` and `tint` config values

Or table of functions that each accept the following arguments:

*   `r`: `number` The red component of the highlight group in question
*   `g`: `number` The green component of the highlight group in question
*   `b`: `number` The blue component of the highlight group in question
*   `hl_group_info`: `table` Information about the highlight group being tinted, including:
    *   `hl_group_name`: `string` The name of the highlight group being altered

and each return the `r`, `g` and `b` values modified as needed.

For example:
>
    require("tint").setup({
      transforms = {
        function(r, g, b, hl_group_info)
          print("Higlight group name: " .. hl_group_info.hl_group_name)
          local hl_def = vim.api.nvim_get_hl_by_name(hl_group_info.hl_group_name)
          print("Highlight group definition: " .. vim.inspect(hl_def))
          return r + 1, g + 1, b + 1
        end
      }
    })
<

If you end up finding cool combinations, feel free to submit them to be used by others.

HIGHLIGHT_IGNORE_PATTERNS                         *tint-highlight_ignore_patterns*

type: `table[string]`
default: `{}`

A list of patterns (supplied to `string.find`) for highlight group names to ignore tinting for.

WINDOW_IGNORE_FUNCTION                               *tint-window_ignore_function*

type: `function`
default: `nil`

A function that will be called for each window to discern whether or not it should be tinted. Arguments are `(winid)`, return `false` or `nil` to tint a window, anything else to not tint it.

TINT_BACKGROUND_COLORS                               *tint-tint_background_colors*

type: `boolean`
default: `false`

Whether or not to tint background portions of highlight groups.

